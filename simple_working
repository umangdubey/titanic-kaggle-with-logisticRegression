#!/usr/bin/env python
# coding: utf-8

# In[4]:


import pandas as pd
import numpy as np
import seaborn as sns 
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')
import math

titanic_data = pd.read_csv("train.csv")
titanic_data.head(10)


# In[5]:


print("# of passenger in data :" + str(len(titanic_data.index)))


# #Analyzing data

# In[6]:


sns.countplot(x="Survived",data=titanic_data)


# In[7]:


sns.countplot(x="Survived",hue="Sex",data=titanic_data)


# In[8]:


sns.countplot(x="Survived",hue="Pclass",data=titanic_data)


# In[9]:


titanic_data["Age"].plot.hist()


# In[10]:


titanic_data["Fare"].plot.hist(bins=20)


# In[11]:


titanic_data.info()


# In[12]:


sns.countplot(x="SibSp",data=titanic_data)


# ##DAta wrangling

# In[13]:


titanic_data.isnull()


# In[14]:


titanic_data.isnull().sum()


# In[15]:


sns.heatmap(titanic_data.isnull(),cmap="viridis")


# In[16]:


sns.boxplot(x="Pclass",y="Age",data=titanic_data)


# In[17]:


titanic_data.head(5)


# In[18]:


titanic_data.drop("Cabin",axis=1,inplace=True)


# In[19]:


titanic_data.head(5)


# In[20]:


titanic_data.dropna(inplace=True)


# In[21]:


sns.heatmap(titanic_data.isnull())


# In[22]:


titanic_data.isnull().sum()


# In[23]:


pd.get_dummies(titanic_data['Sex'])


# In[24]:


sex=pd.get_dummies(titanic_data['Sex'],drop_first=True)


# In[25]:


sex.head(5)


# In[26]:


embark=pd.get_dummies(titanic_data['Embarked'])
embark.head(5)


# In[27]:


embark=pd.get_dummies(titanic_data['Embarked'],drop_first=True)
embark.head(5)


# In[28]:


pcl=pd.get_dummies(titanic_data['Pclass'],drop_first=True)
embark.head(5)


# In[29]:


titanic_data=pd.concat([titanic_data,sex,embark,pcl],axis=1)


# In[30]:


titanic_data.head(5)


# In[71]:


titanic_data.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)


# In[32]:


titanic_data.head(5)


# In[33]:


titanic_data.drop("Pclass",axis=1,inplace=True)


# In[34]:


titanic_data.head(5)


# ##TRAIN DATA

# In[35]:


X= titanic_data.drop("Survived",axis=1)
y=titanic_data["Survived"]


# In[36]:


from sklearn.model_selection import train_test_split


# In[37]:


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)


# In[38]:


from sklearn.linear_model import LogisticRegression


# In[39]:


logmodel = LogisticRegression()


# In[40]:


logmodel.fit(X_train,y_train)


# In[59]:


predictions=logmodel.predict(X_test)
predictions = pd.DataFrame({
      "PassengerID":X_test["PassengerId"],
    "Survived": y_test
          
})
predictions.to_csv('submission.csv',index=False)


# In[60]:


from sklearn.metrics import classification_report


# In[61]:


classification_report(y_test,predictions)


# In[62]:


from sklearn.metrics import confusion_matrix


# In[63]:


confusion_matrix(y_test,predictions)


# In[64]:


from sklearn.metrics import accuracy_score


# In[65]:


accuracy_score(y_test,predictions)


# In[66]:


accuracy_score(y_test,predictions)*100


# In[67]:


titanic_data.head(5)


# In[68]:


titanic_data.head(10
                 )


# In[69]:


titanic_data.head(100)


# In[ ]:





# In[ ]:



